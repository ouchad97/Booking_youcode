<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- Add support for component scanning -->
	<context:component-scan base-package="org.reservationacces" />
	<context:component-scan base-package="org.reservationacces.controller" />
	<context:component-scan base-package="org.reservationacces.model" />
	<context:component-scan base-package="org.reservationacces.dao" />
	<context:component-scan base-package="org.reservationacces.service" />
	
	<!-- Add support for conversion, formatting and validation support -->
	<mvc:annotation-driven />

	<!-- Define Spring MVC view resolver -->
	<!-- Resolves Views Selected For Rendering by @Controllers to *.jsp Resources in the /WEB-INF/ Folder -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		name="viewResolver">
		<property name="prefix">
			<value>/WEB-INF/templates/</value>
		</property>
		<property name="suffix">
			<value>.jsp</value>
		</property>
	</bean>

	<!-- Step 1: Define Database DataSource / connection pool -->
	<!-- Configuring the JDBC connection -->
	<bean
		class="org.springframework.jdbc.datasource.DriverManagerDataSource"
		name="dataSource" p:driverClassName="com.mysql.cj.jdbc.Driver"
		p:url="jdbc:mysql://localhost:8000/aa?serverTimezone=UTC"
		p:username="root"
		p:password="admin" />

	<!-- Step 2: Setup Hibernate session factory -->
	<!-- Configuring the Hibernate5 Session Factory Bean -->
	<bean
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean"
		name="sessionFactoryBean" p:dataSource-ref="dataSource">

		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
			</props>
		</property>
		<property name="annotatedClasses">
			<list>
			
				<value>org.reservationacces.model.Utilisateur</value>  
				<value>org.reservationacces.model.OffreAcces</value> 
				<value>org.reservationacces.model.Reservation</value> 
				
			</list>
		</property>
	</bean>


	<!-- Step 3: Setup Hibernate transaction manager -->
	<bean
		class="org.springframework.orm.hibernate5.HibernateTransactionManager"
		name="transactionManager" p:sessionFactory-ref="sessionFactoryBean" />

	<bean class="org.springframework.orm.hibernate5.HibernateTemplate"
		name="hibernateTemplate" p:sessionFactory-ref="sessionFactoryBean" />

	<!-- Step 4: Enable configuration of transactional behavior based on annotations -->
	<tx:annotation-driven
		transaction-manager="transactionManager" />
	<tx:annotation-driven />


	<!-- Add support for reading web resources: css, images, js, etc ... -->
	<mvc:resources location="/resources/"
		mapping="/resources/**">
	</mvc:resources>
</beans>